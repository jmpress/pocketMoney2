openapi: 3.0.1
info:
  title: pocketMoney2
  version: 1.0.0
  description: >-
    A more feature-rich version of the og. An implementation of "envelope"
    budgeting principals.
paths:
  /envelopes:
    summary: GET and POST handlers for envelope operations
    get:
      summary: reads a list of all envelopes in the database.
      description: ''
      operationId: ''
      responses:
        '200':
          description: ''
          content:
            application/json:
              examples:
                'GET response: array of envelopes':
                  value: >-
                    [{envelope_id: 0, envelope_name: 'Rent', current_value:
                    2000, budgeted_value: 2000},{envelope_id: 1, envelope_name:
                    'Food', current_value: 200, budgeted_value:
                    200},{envelope_id: 2,envelope_name:
                    'Utilities',current_value: 300,budgeted_value: 300}]
        default:
          description: Default error sample response
      tags:
        - envelopes
    post:
      summary: Adds a new envelope from contents of request body.
      description: ''
      operationId: ''
      requestBody:
        description: A new envelope object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Envelope'
      responses:
        '200':
          description: ''
          content:
            application/json:
              examples:
                'POST response: array of envelopes':
                  value: >-
                    [{envelope_id: 0, envelope_name: 'Rent', current_value:
                    2000, budgeted_value: 2000},{envelope_id: 1, envelope_name:
                    'Food', current_value: 200, budgeted_value:
                    200},{envelope_id: 2,envelope_name:
                    'Utilities',current_value: 300,budgeted_value: 300}]
        default:
          description: Default error sample response
      tags:
        - envelopes
  /envelopes/{id}:
    summary: PUT and DELETE handlers for envelope operations.
    put:
      summary: Updates an existing envelope with ID {id} using a request body object.
      description: ''
      operationId: ''
      parameters:
        - name: id
          in: path
          description: The id of the envelope to Update.
          required: true
          schema:
            type: string
      requestBody:
        description: A new envelope object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Envelope'
      responses:
        '200':
          description: Default error sample response
      tags:
        - envelopes
    delete:
      summary: Deletes an envelope with ID of {id}.
      description: ''
      operationId: ''
      parameters:
        - name: id
          in: path
          description: The id of the envelope to Delete.
          required: true
          schema:
            type: string
      responses:
        default:
          description: Default error sample response
      tags:
        - envelopes
  /transactions:
    summary: GET and POST handlers for transaction operations.
    get:
      summary: reads a list of all transactions from the database.
      description: ''
      operationId: ''
      responses:
        '200':
          description: ''
          content:
            application/json:
              examples:
                Example GET response:
                  value: >-
                    [{transaction_id: 0, wd_envelope_id: 1, transaction_date:
                    '2020-01-01', payment_recipient: 'Landlord', payment_amount:
                    1000}, {transaction_id: 1, wd_envelope_id: 2,
                    transaction_date: '2020-01-01', payment_recipient: 'PGE',
                    payment_amount: 60}, {transaction_id: 2, wd_envelope_id: 1,
                    transaction_date: '2020-01-01', payment_recipient: 'Fred
                    Meyer', payment_amount:150}]
        default:
          description: Default error sample response
      tags:
        - transactions
    post:
      summary: Adds a new transaction from contents of request body.
      description: ''
      operationId: ''
      requestBody:
        description: A new transaction object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Transaction'
      responses:
        default:
          description: Default error sample response
      tags:
        - transactions
  /transactions/{id}:
    summary: PUT and DELETE handlers for transaction operations.
    put:
      summary: Updates the attributes of a transaction using the request body.
      description: ''
      operationId: ''
      parameters:
        - name: id
          in: path
          description: The id of the transaction to Update.
          required: true
          schema:
            type: string
      requestBody:
        description: A new transaction object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Transaction'
      responses:
        default:
          description: Default error sample response
      tags:
        - transactions
    delete:
      summary: Deletes the transaction with ID {id}.
      description: ''
      operationId: ''
      parameters:
        - name: id
          in: path
          description: The id of the transaction to Delete.
          required: true
          schema:
            type: string
      responses:
        default:
          description: Default error sample response
      tags:
        - transactions
components:
  schemas:
    Envelope:
      type: object
      properties:
        envelope_id:
          type: integer
        envelope_name:
          type: string
        current_value:
          type: number
        budgeted_value:
          type: number
      xml:
        name: Envelope
    Transaction:
      type: object
      properties:
        transaction_id:
          type: integer
        wd_envelope_id:
          type: integer
        transaction_date:
          type: string
        payment_recipient:
          type: string
        payment_amount:
          type: number
      xml:
        name: Transaction
